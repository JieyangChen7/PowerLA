#//////////////////////////////////////////////////////////////////////////////
#   -- MAGMA (version 2.5.4) --
#      Univ. of Tennessee, Knoxville
#      Univ. of California, Berkeley
#      Univ. of Colorado, Denver
#      @date October 2020
#//////////////////////////////////////////////////////////////////////////////

# GPU_TARGET contains one or more of Fermi, Kepler, Maxwell, Pascal, Volta, Turing, or Ampere
# to specify for which GPUs you want to compile MAGMA:
#     Fermi          - NVIDIA compute capability 2.x cards
#     Kepler         - NVIDIA compute capability 3.x cards
#     Maxwell        - NVIDIA compute capability 5.x cards
#     Pascal         - NVIDIA compute capability 6.x cards
#     Volta/Turing   - NVIDIA compute capability 7.x cards
#     Ampere         - NVIDIA compute capability 8.x cards
# The default is "Kepler Maxwell Pascal".
# Note that NVIDIA no longer supports 1.x cards, as of CUDA 6.5.
# See http://developer.nvidia.com/cuda-gpus
#
#GPU_TARGET ?= Kepler Maxwell Pascal

# --------------------
# programs

CC        = xlc++_r
CXX       = xlc++_r
NVCC      = nvcc
FORT      = xlf

ARCH      = ar
ARCHFLAGS = cr
RANLIB    = ranlib


# --------------------
# flags

# Use -fPIC to make shared (.so) and static (.a) library;
# can be commented out if making only static library.
FPIC      = -fPIC

CFLAGS    = -O3 $(FPIC) -qsmp=omp -DNDEBUG -DNOCHANGE -Wall -Wshadow
FFLAGS    = -O3 $(FPIC)       -DNDEBUG -DNOCHANGE
F90FLAGS  = -O3 $(FPIC)       -DNDEBUG -DNOCHANGE
NVCCFLAGS = -O3               -DNDEBUG -DNOCHANGE -Xcompiler "$(FPIC) -Wall -Wno-unused-function" -std=c++11
LDFLAGS   =     $(FPIC) -qsmp=omp

# C++11 (gcc >= 4.7) is not required, but has benefits like atomic operations
CXXFLAGS := $(CFLAGS) -std=c++11
CFLAGS   += -std=c99


# --------------------
# libraries

# ESSL is not LAPACK complete, so reference LAPACK must be added
LIB       = -lesslsmp -lpthread -lstdc++ -lm -llapack

LIB      += -lcublas -lcusparse -lcudart -lcudadevrt

# --------------------
# directories

# define library directories preferably in your environment, or here.
#OLCF_ESSL_ROOT ?= /opt/essl
#OLCF_CUDA_ROOT ?= /usr/local/cuda
#-include make.check-cuda
#OLCF_NETLIB_LAPACK_ROOT ?= /opt/netlib-lapack

LIBDIR    = -L$(OLCF_CUDA_ROOT)/lib64 \
            -L$(OLCF_ESSL_ROOT)/lib64 -L$(OLCF_NETLIB_LAPACK_ROOT)/lib64

INC       = -I$(OLCF_CUDA_ROOT)/include \
            -I$(OLCF_ESSL_ROOT)/include -I$(OLCF_NETLIB_LAPACK_ROOT)/include


